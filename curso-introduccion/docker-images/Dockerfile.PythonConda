# 1. Imagen base utilizando continuumio/miniconda3, que ya incluye Conda preinstalado
FROM continuumio/miniconda3

# 2. Instalar utilidades necesarias y Node.js
RUN apt-get update && apt-get install -y --no-install-recommends \
    bash \
    curl \
    git \
    wget \
    sudo \
    ca-certificates \
    make \
    libnss3 \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get update && apt-get install -y --no-install-recommends nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 3. Verificar Node.js y npm
RUN node -v && npm -v

# 4. Actualizar conda y configurar canales
RUN conda update -n base -c defaults conda -y && \
    conda config --add channels conda-forge

# 5. Instalar paquetes Python esenciales con conda (sin jupyterlab)
RUN conda install -y \
    ipykernel \
    jupyter_client \
    notebook \
    jupyter_core \
    nbformat \
    && conda clean -afy

# 6. ConfiguraciÃ³n de git
RUN git config --system core.sshCommand "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" \
    && git config --system --add safe.directory "*"

# 7. Instalar Code-Server (VS Code Server)
RUN curl -fsSL https://code-server.dev/install.sh | bash

# 8. Configurar tema oscuro por defecto en VS Code
RUN mkdir -p ~/.local/share/code-server/User && \
    echo '{"workbench.colorTheme": "Default Dark+", "jupyter.alwaysTrustNotebooks": true}' > ~/.local/share/code-server/User/settings.json

# 9. Exponer puertos (8080 para code-server y 8888 para el servidor de Jupyter)
EXPOSE 8888 8080

# 10. CMD para iniciar notebook y Code-Server
CMD ["/bin/bash", "-c", "source /etc/profile && source ~/.bashrc && \
    jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root \
    --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.disable_check_xsrf=True & \
    code-server --bind-addr 0.0.0.0:8080 --auth none --disable-telemetry & \
    exec bash"]